[versions]
minecraft = "1.20.4-R0.1-SNAPSHOT"
kotlin = "1.9.20"
jvm = "17"

anvilgui = "1.9.2-SNAPSHOT"
coroutines = "1.7.3"
compose = "1.5.11"
exposed = "0.46.0"
fastutil = "8.2.2"
fawe = "2.8.4"
junit = "5.10.0"
kaml = "0.57.0"
kotest = "5.8.0"
kt-statistics = "1.2.1"
logback = "1.4.11"
mccoroutine = "2.14.0"
mockbukkit = "3.65.0"
mockk = "1.13.8"
modelengine = "R4.0.4"
protocollib = "5.1.0"
reflections = "0.10.2"
serialization = "1.6.2"
sqlite-jdbc = "3.43.0.0"
vault = "1.7"
worldguard = "7.1.0-SNAPSHOT"
creative = "1.6.0"

mythic-dist = "5.6.0-SNAPSHOT"
mythiccrucible = "1.6.0"
itemsadder = "3.5.0b"


# Gradle deps
dokka = "1.9.0"
shadowjar = "8.1.1"
dependencyversions = "0.48.0"
userdev = "1.5.11"

[libraries]
minecraft-papermc = { module = "io.papermc.paper:paper-api", version.ref = "minecraft" }
minecraft-headlib-api = "com.github.DRE2N.HeadLib:headlib-core:877e80d3b3"
minecraft-headlib-core = "de.erethon:headlib:3.0.10"
minecraft-mccoroutine = { module = "com.github.shynixn.mccoroutine:mccoroutine-bukkit-api", version.ref = "mccoroutine" }
minecraft-mccoroutine-core = { module = "com.github.shynixn.mccoroutine:mccoroutine-bukkit-core", version.ref = "mccoroutine" }
minecraft-anvilgui = { module = "net.wesjd:anvilgui", version.ref = "anvilgui" }
minecraft-mockbukkit = { module = "com.github.seeseemelk:MockBukkit-v1.20", version.ref = "mockbukkit" }

minecraft-plugin-modelengine = { module = "com.ticxo.modelengine:ModelEngine", version.ref = "modelengine" }
minecraft-plugin-protocollib = { module = "com.comphenix.protocol:ProtocolLib", version.ref = "protocollib" }
minecraft-plugin-mythic-dist = { module = "io.lumine:Mythic-Dist", version.ref = "mythic-dist" }
minecraft-plugin-mythic-crucible = { module = "io.lumine:MythicCrucible", version.ref = "mythiccrucible" }
minecraft-plugin-itemsadder = { module = "com.github.LoneDev6:api-itemsadder", version.ref = "itemsadder" }

minecraft-plugin-fawe-core = { module = "com.fastasyncworldedit:FastAsyncWorldEdit-Core", version.ref = "fawe" }
minecraft-plugin-fawe-bukkit = { module = "com.fastasyncworldedit:FastAsyncWorldEdit-Bukkit", version.ref = "fawe" }

minecraft-plugin-vault = { module = "com.github.MilkBowl:VaultAPI", version.ref = "vault" }

minecraft-plugin-worldguard = { module = "com.sk89q.worldguard:worldguard-bukkit", version.ref = "worldguard" }

creative-api = { module = "team.unnamed:creative-api", version.ref = "creative" }
creative-serializer-minecraft = { module = "team.unnamed:creative-serializer-minecraft", version.ref = "creative" }
creative-server = { module = "team.unnamed:creative-server", version.ref = "creative" }

fastutil = { module = "it.unimi.dsi:fastutil", version.ref = "fastutil" }

reflections = { module = "org.reflections:reflections", version.ref = "reflections" }

exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-javatime = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }

sqlite-jdbc = { module = "org.xerial:sqlite-jdbc", version.ref = "sqlite-jdbc" }

gradle-dokka = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
gradle-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
gradle-shadowjar = { module = "com.github.johnrengelman:shadow", version.ref = "shadowjar" }
gradle-paperweight-userdev = { module = "io.papermc.paperweight:paperweight-userdev", version.ref = "userdev" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }

kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlinx-serialization-properties = { module = "org.jetbrains.kotlinx:kotlinx-serialization-properties", version.ref = "serialization" }
kotlinx-serialization-kaml = { module = "com.charleskorn.kaml:kaml", version.ref = "kaml" }

kotlin-statistics = { module = "org.nield:kotlin-statistics", version.ref = "kt-statistics" }

logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-assertions = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }

junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }

[bundles]
minecraft = ["minecraft-headlib-api", "minecraft-mccoroutine", "minecraft-anvilgui"]
exposed = ["exposed-core", "exposed-dao", "exposed-jdbc", "exposed-javatime", "sqlite-jdbc"]
platform = [
    "minecraft-mccoroutine-core",
    "minecraft-anvilgui",
    #"reflections",
    #"exposed-core",
    #"exposed-dao",
    #"exposed-jdbc",
    #"exposed-javatime",
    #"sqlite-jdbc",
    "kotlin-stdlib",
    "kotlin-reflect",
    "kotlinx-coroutines",
    "kotlinx-serialization-json",
    "kotlinx-serialization-properties",
    "kotlinx-serialization-kaml",
    "logback-classic",
    "creative-api",
    "creative-serializer-minecraft",
    "creative-server",
]



[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
shadowjar = { id = "com.github.johnrengelman.shadow", version.ref = "shadowjar" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
dependencyversions = { id = "com.github.ben-manes.versions", version.ref = "dependencyversions" }
